version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: kaopizauth-nginx-staging
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - kaopizauth-api
    networks:
      - kaopizauth-network
    restart: unless-stopped

  kaopizauth-db:
    image: postgres:15
    container_name: kaopizauth-postgres-staging
    environment:
      POSTGRES_DB: ${DB_NAME:-KaopizAuthStaging}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/backups
    networks:
      - kaopizauth-network
    restart: unless-stopped

  kaopizauth-redis:
    image: redis:7-alpine
    container_name: kaopizauth-redis-staging
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - kaopizauth-network
    restart: unless-stopped

  kaopizauth-api:
    image: ghcr.io/${GITHUB_REPOSITORY:-hoale240803/kaopiz}-api:develop
    container_name: kaopizauth-api-staging
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ConnectionStrings__DefaultConnection=Host=kaopizauth-db;Database=${DB_NAME:-KaopizAuthStaging};Username=${DB_USER:-postgres};Password=${DB_PASSWORD};Pooling=true;Maximum Pool Size=50;
      - ConnectionStrings__RedisConnection=kaopizauth-redis:6379
      - JWT__SecretKey=${JWT_SECRET_KEY}
      - JWT__Issuer=${JWT_ISSUER:-KaopizAuth-Staging}
      - JWT__Audience=${JWT_AUDIENCE:-KaopizAuth-Users-Staging}
      - JWT__AccessTokenExpirationMinutes=${JWT_ACCESS_TOKEN_EXPIRATION:-15}
      - JWT__RefreshTokenExpirationDays=${JWT_REFRESH_TOKEN_EXPIRATION:-7}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://staging.yourdomain.com}
    volumes:
      - api_logs:/app/logs
      - api_data:/app/data
    depends_on:
      - kaopizauth-db
      - kaopizauth-redis
    networks:
      - kaopizauth-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'

  kaopizauth-webapp:
    image: ghcr.io/${GITHUB_REPOSITORY:-hoale240803/kaopiz}-webapp:develop
    container_name: kaopizauth-webapp-staging
    environment:
      - NODE_ENV=staging
      - VITE_API_URL=${API_URL:-https://staging-api.yourdomain.com}
    volumes:
      - webapp_logs:/app/logs
    depends_on:
      - kaopizauth-api
    networks:
      - kaopizauth-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

volumes:
  postgres_data:
    driver: local
  postgres_backups:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local
  webapp_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  kaopizauth-network:
    driver: bridge