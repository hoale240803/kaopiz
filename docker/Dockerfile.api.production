# Multi-stage production-optimized Dockerfile for API
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy project files for better layer caching
COPY ["src/KaopizAuth.WebAPI/KaopizAuth.WebAPI.csproj", "src/KaopizAuth.WebAPI/"]
COPY ["src/KaopizAuth.Application/KaopizAuth.Application.csproj", "src/KaopizAuth.Application/"]
COPY ["src/KaopizAuth.Infrastructure/KaopizAuth.Infrastructure.csproj", "src/KaopizAuth.Infrastructure/"]
COPY ["src/KaopizAuth.Domain/KaopizAuth.Domain.csproj", "src/KaopizAuth.Domain/"]
COPY ["Directory.Build.props", "./"]
COPY ["Directory.Packages.props", "./"]
COPY ["global.json", "./"]

# Restore packages
RUN dotnet restore "src/KaopizAuth.WebAPI/KaopizAuth.WebAPI.csproj"

# Copy source code
COPY . .

# Build and publish
WORKDIR "/src/src/KaopizAuth.WebAPI"
RUN dotnet publish "KaopizAuth.WebAPI.csproj" -c Release -o /app/publish \
    --no-restore \
    --runtime linux-x64 \
    --self-contained false \
    /p:PublishTrimmed=false \
    /p:PublishSingleFile=false

# Production runtime image
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime

# Create non-root user for security
RUN groupadd -r appuser && useradd --no-log-init -r -g appuser appuser

# Install required packages for production
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Create directories with proper permissions
RUN mkdir -p /app/logs /app/data \
    && chown -R appuser:appuser /app

# Copy published files
COPY --from=build /app/publish .

# Set ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Environment variables
ENV ASPNETCORE_ENVIRONMENT=Production \
    ASPNETCORE_URLS=http://+:8080 \
    DOTNET_RUNNING_IN_CONTAINER=true \
    DOTNET_USE_POLLING_FILE_WATCHER=true \
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

# Expose port
EXPOSE 8080

# Start application
ENTRYPOINT ["dotnet", "KaopizAuth.WebAPI.dll"]