# Use the official .NET 8 SDK image
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /app

# Copy csproj files and restore dependencies
COPY ["src/KaopizAuth.WebAPI/KaopizAuth.WebAPI.csproj", "src/KaopizAuth.WebAPI/"]
COPY ["src/KaopizAuth.Application/KaopizAuth.Application.csproj", "src/KaopizAuth.Application/"]
COPY ["src/KaopizAuth.Infrastructure/KaopizAuth.Infrastructure.csproj", "src/KaopizAuth.Infrastructure/"]
COPY ["src/KaopizAuth.Domain/KaopizAuth.Domain.csproj", "src/KaopizAuth.Domain/"]
COPY ["Directory.Build.props", "./"]
COPY ["global.json", "./"]
RUN dotnet restore "src/KaopizAuth.WebAPI/KaopizAuth.WebAPI.csproj"

# Copy the rest of the source code
COPY . .

# Build and publish the application
WORKDIR /app/src/KaopizAuth.WebAPI
RUN dotnet publish -c Release -o /app/publish

# Use the official .NET 8 runtime image
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published files from build stage
COPY --from=build /app/publish .

# Create logs directory
RUN mkdir -p /app/logs

# Expose port
EXPOSE 8080

# Set environment variables
ENV ASPNETCORE_URLS=http://+:8080
ENV ASPNETCORE_ENVIRONMENT=Production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start the application
ENTRYPOINT ["dotnet", "KaopizAuth.WebAPI.dll"]